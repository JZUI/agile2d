1. Extract the jnilibs from the jogl JAR file
jar xf jogl-macosx-universal-1.1.1-rc6.jar

2. add the directory containing those files to your DYLD_LIBRARY_PATH environment variable
export DYLD_LIBRARY_PATH=path/to/target/dir:$DYLD_LIBRARY_PATH

3. Command line to execute a demo:
java -cp target/agile2d-0.0.1-SNAPSHOT.jar agile2d.AgileCanvas GLCanvas
Obs: you can replace 'GLCanvas' by 'GLJPanel' if you want to see diference in using Swing components

4. Command line to execute a Hello World example (check the source java files to see how to switch from a pure Graphics2D to a Agile2D canvas):
java -cp target/agile2d-0.0.1-SNAPSHOT.jar agile2d.examples.HelloWorld GLCanvas 

5. Command line to execute the Benchmark application:
java -cp target/agile2d-0.0.1-SNAPSHOT.jar agile2d.benchmark.Benchmark [GLCanvas | GLJPanel | JFrame]
Obs: Use this application to see in which cases (number of glyphs, use of textures) there's a gain in performance using Agile instead of Graphics2d. Use 'JFrame' instead of 'GLCanvas' in order to see the rendering based only on Java2D components (no Agile2D/OpenGL).

************
- If you get the following error:
libjogl.jnilib: no matching architecture in universal wrapper
make sure you pass parameter -d32 on the cmd line

